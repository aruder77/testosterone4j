package mp3manager {
	
	tags { 
		Pflichtfeld, Empty
	}
	
	activityType WorkbenchWindow
	
	activityType View
	 
	activityType Editor
	
	activityType Popup
	
	type String mappedBy java.lang.String
	
	datatype StringDT type String {
		class emptyString value "" Empty
		class shortString value "shortString"
		class longString value "longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglongString" 		
	} 
	
	datatype ErrorStringDT type String {
		class ok value "OK"
		class missingValue value "Please enter a value"
	}
	
	datatype TrackDT type String {
		class emptyTrack value "" 
		class realTrack value "5"
	}
	
	control TextControl { 
		op setText(String str)
		op String getText
	}
	
	control TreeControl {
		op doubleClickItem
	}
	
	control Label {
		op String getText
	}
	
	activity MainWindow type WorkbenchWindow {
		op openView => OpenViewDialog 
		op findLogicalView => LogicalView
	}
	
	activity LogicalView type View {
		field tree control TreeControl {
			op doubleClickItem => SongEditor
		}
	}
	
	activity SongEditor identifiedBy "com.siemens.ct.mp3m.ui.editors.ids.Id3DataBindingEditor" type Editor {
		field title identifiedBy "Id3TagPage.Title_Label" control TextControl tag Pflichtfeld {
			op setText (StringDT str)
			op StringDT getText
		}
		
		field artist identifiedBy "Id3TagPage.Artist_Label" control TextControl tag Pflichtfeld { 
			op setText (StringDT str)
			op StringDT getText
		}

		field album identifiedBy "Id3TagPage.Album_Label" control TextControl tag Pflichtfeld { 
			op setText (StringDT str)
			op StringDT getText
		}

		field track identifiedBy "Id3TagPage.Track_Label" control TextControl {
			op setText (TrackDT str)
			op TrackDT getText
		} 
		
		field errorMarker identifiedBy "errorMarker" control Label {
			op ErrorStringDT getText
		} 
		
		op saveAndClose => MainWindow
		
		op openView(StringDT viewId)
	}
	
	
	activity OpenViewDialog type Popup {
		op selectLogicalView
		op ok => MainWindow
		op cancel => MainWindow
	}
	
	
	useCase OpenLogicalView initial MainWindow {
		aop openView
		aop selectLogicalView 
		aop ok
		aop findLogicalView
		op tree.doubleClickItem
		
		op track.setText
		var enteredTitle = generatedValue(str)

		aop saveAndClose
		aop findLogicalView
		op tree.doubleClickItem
		var result = op track.getText
//		expr junit::framework::Assert::assertEquals(enteredTitle.getValue(), result.getValue())	
	}
	 
	test OpenLogicalViewTest generator de.msg.xt.mdt.base.SampleTestGenerator useCase OpenLogicalView
}