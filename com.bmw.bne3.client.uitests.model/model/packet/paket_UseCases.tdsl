package bne3.usecases.paket for bne3.activities.Stdtoolkit {
	
	import de.msg.xt.mdt.tdsl.basictypes.*
	import de.msg.xt.mdt.tdsl.swtbot.*
	import bne3.datatypes.*
	import bne3.activities.*

	useCase CreatePaket(ShortName codingShortName) initial MainWindow {
		call bne3.usecases.CreateMinimumCoding(bne3.usecases.CreateCoding.shortName=codingShortName)
		call bne3.usecases.OpenEthernetNavigator
		#findEthernetNavigator
		#addBasisDatentyp
		
		#allgemeinPage
		#longname.setText
		val longName = generatedValue(str)
		#shortname.setText
		val shortName = generatedValue(str)
		#textuelleBeschreibung.invokeContextMenu(contextMenuEntry="Element hinzufügen")
		#textuelleBeschreibung.setTextByName(row=0, columnName="Text")
		val text1 = generatedValue(textValue)	
		#textuelleBeschreibung.selectValueByName(row=0, columnName="Sprache")
		val sprache = generatedValue(textValue)	
		#textuelleBeschreibung.invokeContextMenu(contextMenuEntry="Element hinzufügen")
		#textuelleBeschreibung.setTextByName(row=1, columnName="Text", textValue="Second")
		#textuelleBeschreibung.selectValueByName(row=1, columnName="Sprache")
		#textuelleBeschreibung.invokeContextMenuOnRow(row=1, contextMenuEntry="Element löschen")
		#returnToEditor		
		#saveAndClose
		
		#findEthernetNavigator
		#openBasisDatentyp(title=shortName.getValue())

		#allgemeinPage
		val actualLongName = #longname.getText
		val actualShortName = #shortname.getText
		val actualtext = #textuelleBeschreibung.getTextByName(row=0, columnName="Text")
		val actualSprache = #textuelleBeschreibung.getTextByName(row=0, columnName="Sprache")
		val actualAnzEntries = #textuelleBeschreibung.getRowCount
		assert [ junit::framework::Assert::assertEquals(longName.getValue(), actualLongName.getValue())] 
		assert [ junit::framework::Assert::assertEquals(shortName.getValue(), actualShortName.getValue())]
		assert [ junit::framework::Assert::assertEquals(text1.getValue(), actualtext.getValue())]
		assert [ junit::framework::Assert::assertEquals(sprache.getValue(), actualSprache.getValue())]
		assert [ junit::framework::Assert::assertEquals(1, actualAnzEntries.getValue())]
		#returnToEditor
	}
	
	test CreatePaketTest generator de.msg.xt.mdt.base.SampleTestGenerator useCase CreatePaket {
		excludeTags Invalid Empty
	}


}