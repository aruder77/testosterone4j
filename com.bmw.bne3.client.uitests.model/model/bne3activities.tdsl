package bne3.activities {
	import de.msg.xt.mdt.tdsl.basictypes.*
	import de.msg.xt.mdt.tdsl.swtbot.*
	import bne3.datatypes.*
	import bne3.activities.changerequest.*
	import bne3.bnecontrols.*
	import bne3.activities.datatypetype.*

	toolkit Stdtoolkit using controls {
		TextControl, TreeControl, Label, Button, TableControl, ComboBox, RadioButton
	}

	activity ViewActivity {
		op close => MainWindow
		op returnToMain => MainWindow
	}

	activity EditorActivity {
		op saveAndClose => MainWindow
		op close => MainWindow
		op BooleanDT isDirty
		op returnToMain => MainWindow
	}

	activity DialogActivity {
	}

	activity MainWindow {
		op openView => OpenViewDialog
		op openBne3DevPerspective
		op openBne3Perspective
		op resetPerspective
		op openPerspective(StringDT perspectiveId)
		op openPerspectiveByName(StringDT perspectiveName)
		op findEthernetNavigator => EthernetNavigator
		op findNewCodingEditor => CodingEditor
		op findNewAenderungsantragEditor => Aenderungsantrag
		op findNewBasisdatentypEditor => BasisDatentypEditor
		op findNewAufzaehlungstypEditor => AufzaehlungstypenEditor
		op findNewStrukturtypEditor => StrukturEditor
		op findNewUniontypEditor => UniontypEditor
	}

	activity OpenViewDialog {
		op selectView(StringDT category, StringDT viewId)
		op ok => MainWindow
		op cancel => MainWindow
	}

	activity EthernetNavigator extends ViewActivity {
		field filterText identifiedBy "filterText" control TextControl {
			op StringDT getText
			op BooleanDT isEnabled
			op setText(StringDT str)
		}

		field searchButton identifiedBy "searchButton" control Button {
			op BooleanDT isEnabled
			op push
		}

		field clearButton identifiedBy "clearButton" control Button {
			op BooleanDT isEnabled
			op push
		}

		field tree identifiedBy "ethernet.navigator.tree" control TreeControl {
			op BooleanDT isEnabled
			op doubleClickNode(StringDT nodePath)
			op selectNode(StringDT nodePath)
			op invokeContextMenu(StringDT nodePath, StringDT contextMenuEntry)
			op isContextMenuEnabled(StringDT nodePath, StringDT contextMenuEntry)
			op hasChildNode(StringDT nodePath, StringDT nodePattern, BooleanDT recursive)
		}

		op activateChangeRequest(StringDT title)
		op openCoding(StringDT title) => CodingEditor
		op addChangeRequest {
			#tree.invokeContextMenu(nodePath = "Änderungsmanagement/Änderungsantrag", contextMenuEntry =
			"Änderungsantrag hinzufügen")
			#returnToMain
			#findNewAenderungsantragEditor
		} => Aenderungsantrag
		op openChangeRequest(StringDT title) => Aenderungsantrag
		op addBasisDatentyp {
			#tree.invokeContextMenu(nodePath = "Ethernet/Datentypen/Basisdatentypen", contextMenuEntry =
			"Basisdatentyp hinzufügen")
			#returnToMain
			#findNewBasisdatentypEditor
		} => BasisDatentypEditor
		op openBasisDatentyp(StringDT title) => BasisDatentypEditor
		op addAufzaehlungstyp {
			#tree.invokeContextMenu(nodePath = "Ethernet/Datentypen/Aufzählungen", contextMenuEntry = "Aufzählung hinzufügen")
			#returnToMain
			#findNewAufzaehlungstypEditor
		} => AufzaehlungstypenEditor
		op openAufzaehlungstyp(StringDT title) => AufzaehlungstypenEditor
		op addStrukturtyp {
			#tree.invokeContextMenu(nodePath = "Ethernet/Datentypen/Strukturen", contextMenuEntry = "Struktur hinzufügen")
			#returnToMain
			#findNewStrukturtypEditor
		} => StrukturEditor
		op openStrukturtyp(StringDT title) => StrukturEditor
		op addUniontyp {
			#tree.invokeContextMenu(nodePath = "Ethernet/Datentypen/Unions", contextMenuEntry = "Union hinzufügen")
			#returnToMain
			#findNewUniontypEditor
		} => UniontypEditor
		op openUniontyp(StringDT title) => UniontypEditor
		op addPaket {
			#tree.invokeContextMenu(nodePath = "Ethernet/Datentypen/Unions", contextMenuEntry = "Union hinzufügen")
			#returnToMain
			#findNewUniontypEditor
		} => UniontypEditor
		op openPaket(StringDT title) => bne3.activities.paket.PaketEditor
	}

	activity CodingEditor identifiedBy "CodingTypePresentation" extends EditorActivity {
		op allgemeinPage => AllgemeinPage
		op verwendungPage
		op kodierungPage => CodingEditorKodierungPage
	}

	activity AllgemeinPage {
		field longname identifiedBy "longname" control TextControl {
			op LongName getText
			op setText(LongName str)
			op BooleanDT isEnabled
		}

		field shortname identifiedBy "shortname" control TextControl {
			op ShortName getText
			op setText(ShortName str)
			op BooleanDT isEnabled
		}

		field textuelleBeschreibung identifiedBy "bne3.table.Descriptions" control TableControl {
			op IntegerDT getRowCount
			op StringDT getText(IntegerDT row, IntegerDT column)
			op StringDT getTextByName(IntegerDT row, StringDT columnName)
			op BooleanDT isContextMenuEnabled(StringDT contextMenuEntry)
			op setText(IntegerDT row, IntegerDT column, StringDT textValue)
			op setTextByName(IntegerDT row, StringDT columnName, StringDT textValue)
			op selectValue(IntegerDT row, IntegerDT column, LanguageDT textValue)
			op selectValueByName(IntegerDT row, StringDT columnName, LanguageDT textValue)
			op invokeContextMenu(StringDT contextMenuEntry)
			op invokeContextMenuOnRow(IntegerDT row, StringDT contextMenuEntry)
			op checkRow(IntegerDT row)
			op selectRow(IntegerDT row)
		}

		field formaleAnnotationen identifiedBy "components.table.FormalAnnotations" control TableControl {
			op IntegerDT getRowCount
			op StringDT getText(IntegerDT row, IntegerDT column)
			op StringDT getTextByName(IntegerDT row, StringDT columnName)
			op BooleanDT isContextMenuEnabled(StringDT contextMenuEntry)
			op setText(IntegerDT row, IntegerDT column, StringDT textValue)
			op setTextByName(IntegerDT row, StringDT columnName, StringDT textValue)
			op selectValue(IntegerDT row, IntegerDT column, FormalAnnotationDT textValue)
			op selectValueByName(IntegerDT row, StringDT columnName, FormalAnnotationDT textValue)
			op invokeContextMenu(StringDT contextMenuEntry)
			op invokeContextMenuOnRow(IntegerDT row, StringDT contextMenuEntry)
			op checkRow(IntegerDT row)
			op selectRow(IntegerDT row)
		}

		op returnToEditor => CodingEditor
	}

	activity CodingEditorKodierungPage {
		field physBasisDatenTyp identifiedBy "coding.physicaltype.basedatatype" control ComboBox {
			op setText(BasisdatentypDT str)
			op BasisdatentypDT getText
			op BooleanDT isEnabled
		}

		field physMinimum identifiedBy "coding.physicaltype.minimum" control TextControl {
			op DoubleStringDT getText
			op setText(DoubleStringDT str)
			op BooleanDT isEnabled
		}

		field physAufloesung identifiedBy "coding.physicaltype.precision" control TextControl {
			op DoubleStringDT getText
			op setText(DoubleStringDT str)
			op BooleanDT isEnabled
		}

		field physMaximum identifiedBy "coding.physicaltype.maximum" control TextControl {
			op DoubleStringDT getText
			op setText(DoubleStringDT str)
			op BooleanDT isEnabled
		}

		field physMinimumIntervallgrenze identifiedBy "coding.physicaltype.intervaltype" control ComboBox {
			op setText(IntervallgrenzeDT str)
			op IntervallgrenzeDT getText
			op BooleanDT isEnabled
		}

		field physMaximumIntervallgrenze identifiedBy "coding.physicaltype.maximum.intervaltype" control ComboBox {
			op setText(IntervallgrenzeDT str)
			op IntervallgrenzeDT getText
			op BooleanDT isEnabled
		}

		field internalBasisDatenTyp identifiedBy "coding.codedtype.basedatatype" control ComboBox {
			op setText(BasisdatentypDT str)
			op BasisdatentypDT getText
			op BooleanDT isEnabled
		}

		field internalKategorie identifiedBy "coding.codedtype.category" control ComboBox {
			op setText(KategorieDT str)
			op KategorieDT getText
			op BooleanDT isEnabled
		}

		field internalEncoding identifiedBy "coding.codedtype.encoding" control ComboBox {
			op setText(EncodingDT str)
			op EncodingDT getText
			op BooleanDT isEnabled
		}

		field internalTermination identifiedBy "coding.codedtype.termination" control ComboBox {
			op setText(TerminationDT str)
			op TerminationDT getText
			op BooleanDT isEnabled
		}

		field fixedBitLengthButton identifiedBy "data.codedTypeFixedBitLength" control RadioButton {
			op BooleanDT isSelected
			op BooleanDT isEnabled
			op click
		}

		field bitLength identifiedBy "data.codedTypeBitLength" control TextControl {
			op IntegerStringDT getText
			op setText(IntegerStringDT str)
			op BooleanDT isEnabled
		}

		field variableBitLengthButton identifiedBy "data.codedTypeVariableBitLength" control RadioButton {
			op BooleanDT isSelected
			op BooleanDT isEnabled
			op click
		}

		op returnToEditor => CodingEditor
	}

}