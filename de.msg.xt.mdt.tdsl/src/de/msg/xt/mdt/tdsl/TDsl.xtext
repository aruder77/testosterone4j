grammar de.msg.xt.mdt.tdsl.TDsl with org.eclipse.xtext.xbase.Xbase

generate tDsl "http://www.msg.de/xt/mdt/tdsl/TDsl"
import 'http://www.eclipse.org/xtext/xbase/Xbase' as xbase


TestModel:
	(packages+=PackageDeclaration)*
;

PackageDeclaration:
    'package' name=QualifiedName '{'
    	(elements+=Element)*
    '}';
    
Element:
	Activity | UseCase | Control | Type | DataType | TagsDeclaration
;

Type:
	'type' name=ID 'mappedBy' mappedBy=JvmTypeReference
;

DataType:
	'datatype' name=ID 'type' type=[Type|FQN] '{'
		(classes+=EquivalenceClass)+
	'}'
;

EquivalenceClass:
	'class' name=ID 'value' value=STRING (tags+=[Tag|FQN])*
;

TagsDeclaration:
	'tags' '{'
		tags+=Tag (',' tags+=Tag)*
	'}'
;

Tag:
	name=ID
;

Control:
	'control' name=ID 'mappedBy' mappedBy=JvmTypeReference '{'
		(operations+=Operation)+
	'}'
;

Operation:
	'op' name=ID '(' (params+=ControlOperationParameter (',' params+=ControlOperationParameter)*)? ')' (':' returnType=[Type|FQN])?
;

ControlOperationParameter:
	type=[Type|FQN] name=ID
;
    
Activity:
	'activity' name=ID ('(' inputParameter+=Parameter (',' inputParameter+=Parameter)* ')')? '{'
		(fields+=Field)*
	'}'
;

Field:
	'field' name=ID 'control' control=[Control|FQN] ('datatype' dataType=[DataType|FQN])? (tags+=TagWithCondition)* 
	(
		 '{' 
		 (operations+=OperationMapping)+	
		 '}'
	)?
;

TagWithCondition:
	'tag' tag=[Tag|FQN] ('if' condition=XExpression)?
;

OperationMapping:
	name=ID operation=[Operation|FQN] ('(' (dataTypeMappings+=DataTypeMapping) (',' dataTypeMappings+=DataTypeMapping)* ')')? ('as' dataType=[DataType|FQN])? ('guard' guard=XExpression)?  (nextActivities+=ConditionalNextActivity)*
;

DataTypeMapping:
	name=ID datatype=[DataType|FQN] controlOperationParameter=[ControlOperationParameter|FQN] 
;

ConditionalNextActivity:
	'=>' next=[Activity|FQN] ('if' guard=XExpression)?
;

Parameter:
	dataType=[DataType|FQN] name=ID	
;

ParameterAssignment:
	name=[Parameter|FQN] '=' value=XExpression
;

OperationParameterAssignment:
	name=[DataTypeMapping|FQN] '=' value=XExpression
;

UseCase:
	(test?='test')? 'useCase' name=ID ('(' inputParameter+=Parameter (',' inputParameter+=Parameter)* ')')? 'initial' '=' initialActivity=[Activity|FQN] '{'
		block=UseCaseBlock
	'}'
;

UseCaseBlock returns xbase::XBlockExpression:
	{xbase::XBlockExpression}
  	(expressions+=Statement)*
;

Statement returns xbase::XExpression:
	SubUseCaseCall | OperationCall | VariableDeclaration  //| XAssignment //| CompoundStatement
;

VariableDeclaration returns xbase::XVariableDeclaration:
	{XVariableDeclaration}
	(writeable?='var') (=>(type=JvmTypeReference name=ValidID) | name=ValidID) ('=' right=Expression)?
;

Expression returns xbase::XExpression:
	OperationCall | '[' XExpression ']'
;

FQN:
	ID ('.' ID)*
;

OperationCall returns xbase::XExpression:
	{OperationCall}
	operation=[OperationMapping|FQN] ('(' (paramAssignment+=OperationParameterAssignment) (',' paramAssignment+=OperationParameterAssignment)* ')')?
;

SubUseCaseCall returns xbase::XExpression:
	{SubUseCaseCall}
	'call' useCase=[UseCase|FQN] ('(' paramAssignment+=ParameterAssignment (',' paramAssignment+=ParameterAssignment)*  ')')?
;

/*
CompoundStatement:
	'(' statements+=Statement ('|' statements+=Statement)+ ')'
; */


